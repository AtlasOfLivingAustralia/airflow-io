openapi: 3.0.1
info:
  title: Event data download API
  version: '1.0'
  description: API for downloading event core datasets
  termsOfService: https://www.ala.org.au/terms-of-use/
  contact:
    email: support@ala.org.au
    name: ALA
    url: https://www.ala.org.au
servers:
  - url: https://api.ala.org.au/{basePath}
    variables:
      basePath:
        default: event
paths:
  /dataset/{datasetID}:
    get:
      responses:
        default:
          description: Retrieves the details of a full dataset export
          content:
            application/json:
              examples:
                Success:
                  value: |-
                    {
                      "url": "https://s3.url",
                      "fileSizeInMB": "9639.84",
                      "modified": "2023-02-27 22:55:15+00:00"
                    }
      x-amazon-apigateway-integration:
        payloadFormatVersion: "2.0"
        type: "aws_proxy"
        httpMethod: "POST"
        uri: "arn:aws:apigateway:ap-southeast-2:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-southeast-2:736913556139:function:dataset_details/invocations"
        connectionType: "INTERNET"
        timeoutInMillis: 30000
    parameters:
      - name: datasetID
        in: path
        description: The id for the dataset to retrieve details
        required: true
        schema:
          type: string
  /download/{requestID}:
    get:
      responses:
        default:
          description: Retrieve export details of event archive for dataset
          content:
            application/json:
              examples:
                Success:
                  value: |-
                    {
                      "datasetId": "dr18393",
                      "predicate": {
                        "type": "and",
                        "predicates": [
                          {
                            "type": "in",
                            "key": "datasetKey",
                            "values": [
                              "dr18393"
                            ]
                          }
                        ]
                      },
                      "status": "COMPLETE",
                      "startTime": "2023-02-10T05:35:06.402272+00:00",
                      "finishTime": "2023-02-10T05:44:17.696735+00:00"
                    }
      x-amazon-apigateway-integration:
        payloadFormatVersion: "2.0"
        type: "aws_proxy"
        httpMethod: "POST"
        uri: "arn:aws:apigateway:ap-southeast-2:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-southeast-2:736913556139:function:download_status/invocations"
        connectionType: "INTERNET"
        timeoutInMillis: 30000
    parameters:
      - name: requestID
        in: path
        description: Generated path parameter for requestID
        required: true
        schema:
          type: string
  /download:
    post:
      requestBody:
        description: A JSON object containing the download request include query predicate
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/DownloadRequest'
      responses:
        default:
          description: Default response for POST /download
          content:
            application/json:
              examples:
                Success:
                  value: |-
                    {"requestID": "fb2bb9d8-3ef7-47c9-a37a-0827160cea81"}
      security:
        - ALA_CAS: []
      x-amazon-apigateway-integration:
        payloadFormatVersion: "2.0"
        type: "aws_proxy"
        httpMethod: "POST"
        uri: "arn:aws:apigateway:ap-southeast-2:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-southeast-2:736913556139:function:download_dataset/invocations"
        connectionType: "INTERNET"
        timeoutInMillis: 30000
components:
  schemas:
    DownloadRequest:
      description: A download request
      type: object
      properties:
        datasetId:
          type: string
          description: The ID of the dataset to download
        creator:
          type: string
          description: The name of the creator
        notificationAddresses:
          type: string
          description: The email addresses to send success/failure messages to
        predicate:
          type: object
          $ref: '#/components/schemas/PredicateQuery'
          description: The query predicate
        eventQueryUrl:
          type: string
          description: The URL of the query
      required:
        - datasetId
        - creator
        - notificationAddresses
        - predicate
        - eventQueryUrl
    PredicateQuery:
      description: A query constructed by a type and an array of predicate
      type: object
      properties:
        type:
          type: string
          description: The type of operation
          enum: [ and, or ]
        predicates:
          type: array
          items:
            $ref: '#/components/schemas/Predicate'
      required:
        - type
        - predicates
    Predicate:
      description: A single predicate
      type: object
      properties:
        key:
          type: string
          description: The field to query
          enum: [ datasetKey,taxonKey,locationID,countryCode,year,month,samplingProtocol,stateProvince,eventHierarchy,eventTypeHierarchy,eventType,measurementOfFactTypes ]
        type:
          description: The type of predicate
          type: string
          enum: [ equals,like,lessThan,lessThanOrEquals,greaterThan,greaterThanOrEquals,range,in,not,isNotNull,isNull ]
        value:
          type: string
          description: The value to use in the query
        values:
          type: array
          items:
            type: string
          description: The array of values to use in the query
      required:
        - key
        - type
        - value | values
  securitySchemes:
    ALA_CAS:
      type: "oauth2"
      flows: {}
      x-amazon-apigateway-authorizer:
        identitySource: "$request.header.Authorization"
        jwtConfiguration:
          audience:
            - "events-test-oidc-auth-prod"
            - "https://events-test.ala.org.au"
            - "https://events-test.ala.org.au/"
            - "https://events-test.ala.org.au/?view=DOWNLOAD"
          issuer: "https://auth.ala.org.au/cas/oidc"
        type: "jwt"
x-amazon-apigateway-cors:
  allowMethods:
    - "GET"
    - "HEAD"
    - "OPTIONS"
    - "POST"
  allowHeaders:
    - "*"
  exposeHeaders:
    - "true"
  maxAge: 300
  allowCredentials: false
  allowOrigins:
    - "*"
    - "http://*"
    - "https://*"
x-amazon-apigateway-importexport-version: "1.0"
